----------------------------------------------------------------
Release 0.9.2
	???? ??, 2017
	
	Features
		Moved `ProjectSpec` out of main menge application and into core library
			- facilitates parsing projects in arbitrary contexts.
			- Corrected relationship between command-line parameters and project specification.
			- Added documentation to describe the project specification/command-line configuration.
		Fixed visualization to use a right-handed frame (with z-up).
			- this is significant because, previously, the agents were defined in an x-y plane that
			was being inverted in the visualizer making visual interpretation difficult. Now the
			visualization matches the intuition.
		Extended the camera features:
			- cameras can report their current projection.
			- Cameras can be named (with a default name generated by the parser).
		Added ProfileSelector implementations:
			- "random" profile selector. Assigns a profile to a newly created agent by drawing a
			profile from a set with equal probability.
			- "weighted" profile selector. Assigns a profile to a newly created agent by drawing a
			profile from a *weighted* set. The probability of selecting a particular profile is
			proportional to its relative weight in the set.

----------------------------------------------------------------
Release 0.9.1
	April 23, 2017

	Features
		Added docs and build targets for the docs to the source.
		License updated to unrestricted Apache 2 license.
		Added preliminary (and still somewhat buggy) GCF agent implementation.
		Added VS 2015 project
			- included re-organization of builds,
			- change from SDL1.2 to SDL2
			- Removal of explicit libpng dependency.
		Augmented the event system
			- Added ExternalEventTrigger; a trigger object that can be exposed to external code to
			  trigger events.
			- Added EventEffectAgentState; an event effect that will change the state of target
			  agents.
			- Added TargetAgentById; an event target for a single agent identified by its unique id.
			- Augmented the viewer to detect external triggers and connect keyboard and mouse
			  events to them.  For details see src/Menge/MengeVis/Runtime/EventInjectContext.h
			- Added new example exercising this functionality: examples/core/userEvent.xml. A single
			  agent placed in a diamond-shaped environement. The arrow keys control what direction
			  the agent moves (one of the four cardinal directions).
			- Exposed external triggers in the C-API.
	Bugs
		Updated build instructions in README.md
		Fixed the watermark references. Examples now correctly displaly Menge logo as a watermark.

----------------------------------------------------------------

Release 0.9.0
	February 11, 2017

	Compilers - tested against:
		Visual Studio 2013
		clang++ 3.8.0
		g++ 5.4.0
		
	New Features
		Removed Visual Studio 2005 Solutions
		Significant rearchitecture of the MengeCore library
			Separation of "core" Menge simulation from Visualization utility
			This facilitates embedding Menge's simulation abilities in other domains (e.g., game engines like Unity).
		Introduced initial C-api for the Menge architecture.
		Modified coding style:
			Enforce 100-column limit
			All includes are relative to the root Menge source directory.
			And more...
		Added 64-bit build to the Visual Studio 2013 project
		Added explicit make rules for compling against clang (e.g.:
					make debug-clang
					make release-clang

----------------------------------------------------------------

Release 0.8.3
	January 1, 2017
	
	New Features
		Supports building on Mac OSX
		
	Bugs
		Fixed a compilation problem in stress plugin.
		Corrected compilation problem which prevents NavMesh from compiling under certain non-windows 
			build environments.

----------------------------------------------------------------

Release 0.8.2
	October 17, 2016
	
	New Features
		Added new plugin: StressGAS
			Action for inducing stress upon agents.  Provided two examples: time based and distance based with corresponding examples.
		Added project for VS2013
		Added navigation mesh agent placement.  For multi-layered navigation meshes, a 2D position can be placed on specific polygon groups (rather than the top-down projection default behavior.)  This allows for population of multiple overlapping layers.
		Refactored Goals to use a common region class and operations.
		
	Clean up
		Graph parsing made more verbose; errors in the graph now write to the log and program exits gracefully.
		Obstacles
			Removed unused "boundingbox" attribute in XML obstacle definition.
			Open obstacles are now rejected.
		Fixed .gitignore to properly ignore VS2005 build artifacts
		
	Bugs
		NavMesh spatial query uses agent polygon position to search for polygons; previously it ignored this information and would, in some cases, produce incorrect sets of neigbhor obstacles.
		Fixed bug which prevented scb creation in linux
	

----------------------------------------------------------------

Release 0.8.1
	November 2, 2014
	Corrected run example scripts for windows and linux

----------------------------------------------------------------

Release 0.8.0
	October 18, 2014
	Initial release
	
