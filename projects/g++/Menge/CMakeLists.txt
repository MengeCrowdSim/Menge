cmake_minimum_required(VERSION 2.8)

project(MENGE)

set(MENGE_SRC_DIR ${CMAKE_SOURCE_DIR}/../../src/Menge)
set(MENGE_EXE_DIR ${CMAKE_SOURCE_DIR}/../../Exe) 
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib/)
link_directories (${LIBRARY_OUTPUT_PATH}/)

#Where to find the header files
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/include)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/BFSM)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/viewer)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/SceneGraph)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/Math)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/Agents)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/Runtime)
INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/MengeCore/PluginEngine)

set( CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fpermissive" )

#find the correct OpenMP flag
FIND_PACKAGE(OpenMP)
if(OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${OpenMP_CXX_FLAGS} -fpermissive -DNDEBUG")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

FIND_PACKAGE(SDL)
if(NOT SDL_FOUND)
	message(STATUS "I will try to link against local libraries")
	INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/include)
	LINK_DIRECTORIES  (${MENGE_SRC_DIR}/lib)
	SET(SDL_LIBRARY "SDL")
	SET(SDLMAIN_LIBRARY "SDLmain")
else()
	INCLUDE_DIRECTORIES(${SDL_INCLUDE_DIR})
endif()

FIND_PACKAGE(SDL_ttf)
if(NOT SDLTTF_FOUND)
	MESSAGE(STATUS "I will try to link against local libraries")
	INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/include)
	LINK_DIRECTORIES  (${MENGE_SRC_DIR}/lib)
	SET(SDLTTF_LIBRARY "SDL_ttf")
else()
	INCLUDE_DIRECTORIES(${SDLTTF_INCLUDE_DIR})
endif()

FIND_PACKAGE(SDL_image)
if(NOT SDLIMAGE_FOUND)
	message(STATUS "I will try to link against local libraries")
	INCLUDE_DIRECTORIES (${MENGE_SRC_DIR}/include)
	LINK_DIRECTORIES  (${MENGE_SRC_DIR}/lib)
	SET(SDLIMAGE_LIBRARY SDL_image)
else()
	INCLUDE_DIRECTORIES(${SDLIMAGE_INCLUDE_DIR})
endif()

FIND_PACKAGE(OpenGL REQUIRED)
INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIRS})

FIND_PACKAGE(PNG REQUIRED)

ADD_SUBDIRECTORY(tinyxml)
ADD_SUBDIRECTORY(MengeCore)
ADD_SUBDIRECTORY(mengeMain)

file( 
  GLOB
  EXTRA_FILES
  ${CMAKE_SOURCE_DIR}/../resources/linux/*
  ${CMAKE_SOURCE_DIR}/../resources/common/*
)

file( COPY ${EXTRA_FILES} DESTINATION ${MENGE_EXE_DIR} )

set( CMAKE_INSTALL_ALWAYS true )
